{"by_tag":{"io":["files","stdin"],"reader":["files","stdin"],"os":["files"],"file":["files"],"loops":["fib"],"iterators":["fib"],"input":["stdin"],"conv":["stdin"]},"list":[{"code":"","title":"File Operations","name":"files","tags":["io","reader","os","file"],"author":"Brendan Hansen","description":"This example shows various ways of reading and writing to a file. The core idea behind files in Onyx is that they extend the <code>io.Stream</code> structure, so you can use the <code>core.io</code> package to interact with them."},{"code":"","title":"Fibonacci Sequence","name":"fib","tags":["loops","iterators"],"author":"Brendan Hansen","description":"This example shows three different ways to do the same thing: compute Fibonacci numbers."},{"code":"","title":"Standard Input","name":"stdin","tags":["input","io","reader","conv"],"author":"Brendan Hansen","description":"This example reads a single line of input from <a href=\"https://en.wikipedia.org/wiki/Standard_streams\">standard input</a>, splits it in half on the first space using <a href=\"https://docs.onyxlang.io/packages/core.string.html#bisect\">string.bisect</a>, converts both parts to integers using <a href=\"https://docs.onyxlang.io/packages/core.conv.html#parse\">conv.parse</a>, then prints the results using <a href=\"https://docs.onyxlang.io/packages/core.html#printf\">printf</a> for formatted printing."}]}