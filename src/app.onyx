#inject runtime.vars {
    Enable_Heap_Debug :: true
    Debug :: true
}

use core
use http {Req :: Request, Res :: Response}

reg: otmp.TemplateRegistry;
#inject http.Response {
    render :: (r: ^http.Response, template: str, vars: any) {
        s := reg->render_template(template, ^r.writer, .{ vars.data, vars.type });
        r->status(200 if s == .None else 400);
    }
}

@http.route.{.GET, "/"}
(req: ^Req, res: ^Res) {
    res->render("homepage", null);
}

main :: () {
    reg = otmp.registry();
    reg->load_directory("./www/templates", ".html");

    app := http.application();

    http.set_mime_type("svg", "image/svg+xml");

    files := http.static("/static/", "./www/static/");
    app->pipe(^files);

    #if #defined(runtime.vars.Debug) {
        app->pipe((req, res) => {
            reg->refresh_templates();
        });
    }

    router := http.router();
    router->collect_routes();
    app->pipe(^router);

    logger := http.logger();
    app->pipe(^logger);

    app->serve(8080);
    println("Server stopping...");
}


